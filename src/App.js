import React, {useState, useEffect} from 'react';

import { WiThermometerExterior, WiWindDeg, WiStrongWind, WiCloud, WiBarometer, WiHumidity } from 'weather-icons-react';

import { weatherConditions, weatherIcons } from './utils/weatherConditions.js';

import './App.css';
import Head from 'next/head';
const API_TOKEN = '';

export default function App() {

  const [city, setCity] = useState([]);
  const [temperature, setTemperature] = useState([]);
  const [weatherCondition, setCondition] = useState([]);
  const [weatherDescription, setDescription] = useState([]);
  const [sysCountry, setCountry] = useState([]);
  const [feelsLike, setFeelsLike] = useState([]);
  const [windKmSpeed, setWindKM] = useState([]);
  const [cloudsPercent, setClouds] = useState([]);
  const [latitude, setLatitude] = useState([]);
  const [longitude, setLongitude] = useState([]);
  const [pressure, setPressure] = useState([]);
  const [humidity, setHumidity] = useState([]);

  const [loading, setLoading] = useState(true);

  useEffect(() => {
    getStaticProps();

    async function getStaticProps() {
      
      async function success(pos) {
        var crd = pos.coords;
        setLatitude(crd.latitude);
        setLongitude(crd.longitude);
        getCity(pos.coords.latitude,pos.coords.longitude)
      }
      
      function error(err) {
        console.warn(`ERROR(${err.code}): ${err.message}`);
      }
      navigator.geolocation.getCurrentPosition(success, error);
    }
   
    // This gets called on every request
    async function getServerSideProps(lat, long, city) {

      // Fetch data from external API
      console.log('lat, long and location: ', lat, long, city)
      const res = await fetch(`https://community-open-weather-map.p.rapidapi.com/find?q=${city}&lat=${lat}&lon=${long}t&id=2172797&lang=null&units=metric&mode=xml%2C%20html`, {
        "method": "GET",
        "headers": {
          "x-rapidapi-key":  "",
          "x-rapidapi-host": "",
          "content-type": "application/json",
        }
      })

    const data = await res.json()
    console.log(data);
    setCity(data.list[0].name)
    setTemperature(data.list[0].main.temp)
    setCondition(data.list[0].weather[0].main);
    setDescription(data.list[0].weather[0].description);
    setCountry(data.list[0].sys.country);
    setFeelsLike(data.list[0].main.feels_like);
    setWindKM(data.list[0].wind.speed * 3.6);
    setClouds(data.list[0].clouds.all);
    setPressure(data.list[0].main.pressure);
    setHumidity(data.list[0].main.humidity);

    setLoading(false);
  }

// Step 2: Get city name
async function getCity(lat, long) {
  // Paste your LocationIQ token below.
  let loc;
  let data;
  const res = await fetch(`https://us1.locationiq.com/v1/reverse.php?key=${API_TOKEN}&lat=${lat}&lon=${long}&format=json`, {
	  "method": "GET"})

  data = await res.json();

  if (data) {
    console.log("Response: ", data);
        
    if (data.address.city) {
      loc =  data.address.city;
    }
    loc = data.address.town;

  }
  const dataFetcher = getServerSideProps(lat, long, loc);
  return dataFetcher
}
  }, [city, temperature])

  return (
    <div className="container">
        {loading ? (
          <div className="d-md-flex h-md-100 align-items-center justify-content-center text-center" style={{backgroundColor:'#lightblue', color:'#fff'}}> 
              <h1 >Loading weather...</h1>
          </div> ) : (
      <>
      <Head>
        <title>Weather INF</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
      <h1 className="text-center" style={{color:'#000'}}>Weather App</h1>
        { weatherIcons[weatherConditions[weatherCondition].icon] }
        <p className="description" style={{marginTop:"-75px", color: "#fff"}}>
          { weatherDescription }
        </p>

        <h4 className="title" style={{color:'#fff'}}>
        { temperature }
           <span style={{color: "#0070f3"}}>°C</span>
        </h4>
        <h1 className="description" style={{color:'#fff'}}>
          {city + '  '}
          <code className="code" style={{color: "#0070f3"}}> {sysCountry} </code>
        </h1>
        <div className="grid">
          <div className="card">
            <h2 style={{color:"#000"}}>Feels like <WiThermometerExterior size={85} color='"gray"' /> </h2>
            <p style={{fontSize: "32px", color:"#000"}}>{ feelsLike }°</p>
          </div>

          <div className="card" style={{hover: {color: "#0070f3", borderColor: "#0070f3"}, focus: {color: "#0070f3", borderColor: "#0070f3"}, active: {color: "#0070f3", borderColor: "#0070f3"}}}>
            <h2 style={{color:"#000"}}> Wind 
              <WiStrongWind size={85} color='"gray"' />
              <WiWindDeg size={85} color='"gray"' />
            </h2>
            <p style={{fontSize: "32px", color:"#000"}}>{ windKmSpeed.toFixed(2) } Km/h </p>
            
          </div>

          <div className="card" style={{hover: {color: "#0070f3", borderColor: "#0070f3"}, focus: {color: "#0070f3", borderColor: "#0070f3"}, active: {color: "#0070f3", borderColor: "#0070f3"}}}>
            <h2 style={{color:"#000"}}>Cloudy <WiCloud size={85} color='"gray"' /></h2>
            <p style={{fontSize: "32px", color:"#000"}}>{ cloudsPercent } %</p>
            
          </div>

          <div className="card" style={{hover: {color: "#0070f3", borderColor: "#0070f3"}, focus: {color: "#0070f3", borderColor: "#0070f3"}, active: {color: "#0070f3", borderColor: "#0070f3"}}}>
            <h2 style={{color:"#000"}}>Pressure <WiBarometer size={85} color='"gray"' /></h2>
            <p style={{fontSize: "32px", color:"#000"}}>
              { pressure } °
            </p>
            
          </div>
          <div className="card" style={{hover: {color: "#0070f3", borderColor: "#0070f3"}, focus: {color: "#0070f3", borderColor: "#0070f3"}, active: {color: "#0070f3", borderColor: "#0070f3"}}}>
            <h2 style={{color:"#000"}}>Latitude &rarr;</h2>
            <p style={{fontSize: "32px", color:"#000"}}>
              { latitude }
            </p>
          </div>

          <div className="card" style={{hover: {color: "#0070f3", borderColor: "#0070f3"}, focus: {color: "#0070f3", borderColor: "#0070f3"}, active: {color: "#0070f3", borderColor: "#0070f3"}}}>
            <h2 style={{color:"#000"}}>Longitude &rarr;</h2>
            <p style={{fontSize: "32px", color:"#000"}}>
              { longitude }
            </p>
          </div>          
          <div className="card" style={{hover: {color: "#0070f3", borderColor: "#0070f3"}, focus: {color: "#0070f3", borderColor: "#0070f3"}, active: {color: "#0070f3", borderColor: "#0070f3"}}}>
            <h2 style={{color:"#000"}}>Humidity <WiHumidity size={80} color='"gray"' /></h2>
            <p style={{fontSize: "32px", color:"#000"}}>
              { humidity } %
            </p>
          </div>
        </div>
      </main>

      <footer className="footer">
      <>
      </footer>
       <p className="text-center" style={{color: "#000"}}> Made by <a href=""> </a></p>
      </>
    )}
    </div>
  )
}
